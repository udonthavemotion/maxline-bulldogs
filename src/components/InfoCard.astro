---
export interface Props {
  title: string;
  bio: string;
  table?: {
    headers: string[];
    rows: string[][];
  };
  traits?: string[];
  buttonText?: string;
  buttonLink?: string;
  buttonAriaLabel?: string;
  footerText?: string;
  theme?: 'joker' | 'hannibal' | 'substance' | 'nirvana' | 'sandman' | 'harley' | 'default';
  className?: string;
}

const { 
  title, 
  bio, 
  table, 
  traits, 
  buttonText, 
  buttonLink = '#',
  buttonAriaLabel, 
  footerText,
  theme = 'default',
  className = ''
} = Astro.props;

// Theme-specific styling
const themeStyles = {
  joker: 'border-joker-500 hover:shadow-orange-500/20',
  hannibal: 'border-hannibal-500 hover:shadow-gray-500/20',
  substance: 'border-substance-500 hover:shadow-beige-500/20',
  nirvana: 'border-nirvana-500 hover:shadow-purple-500/20',
  sandman: 'border-accent hover:shadow-accent/20',
  harley: 'border-pink-500 hover:shadow-pink-500/20',
  default: 'border-accent border-opacity-20 hover:shadow-gold'
};

const themeClass = themeStyles[theme] || themeStyles.default;
---

<div class={`info-card bg-card-gradient rounded-xl shadow-luxury hover:shadow-2xl transition-all duration-300 p-6 border ${themeClass} hover:transform hover:scale-105 ${className}`}>
  <!-- Card Header with Icon/Image Placeholder -->
  <div class="card-header mb-6">
    <div class="placeholder-image bg-gradient-to-br from-accent to-primary text-white p-6 text-center h-48 flex items-center justify-center rounded-lg font-bold shadow-lg">
      <div class="text-center">
        <div class="text-4xl mb-2">üèÜ</div>
        <span class="text-lg font-playfair">Premium</span>
      </div>
    </div>
  </div>
  
  <!-- Card Content -->
  <div class="card-content">
    <h2 class="text-2xl md:text-3xl font-playfair font-bold text-accent mb-4 text-center">
      {title}
    </h2>
    
    <p class="text-silver mb-6 font-inter leading-relaxed text-center">
      {bio}
    </p>
    
    <!-- Table Section -->
    {table && (
      <div class="table-container overflow-x-auto mb-6 rounded-lg border border-accent border-opacity-20">
        <table class="table-auto w-full border-collapse text-silver min-w-full">
          <thead>
            <tr class="bg-charcoal">
              {table.headers.map(header => (
                <th class="p-4 font-playfair font-semibold text-accent border-b border-accent border-opacity-20 text-left">
                  {header}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {table.rows.map((row, index) => (
              <tr class={`${index % 2 === 0 ? 'bg-obsidian' : 'bg-charcoal'} hover:bg-accent hover:bg-opacity-10 transition-colors`}>
                {row.map(cell => (
                  <td class="p-4 border-b border-accent border-opacity-10 font-inter text-white">
                    {cell}
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    )}
    
    <!-- Traits Section -->
    {traits && traits.length > 0 && (
      <div class="traits-section mb-6">
        <h3 class="text-lg font-playfair font-semibold text-accent mb-3 text-center">
          Key Features
        </h3>
        <ul class="grid grid-cols-1 sm:grid-cols-2 gap-2">
          {traits.map(trait => (
            <li class="flex items-center text-silver text-sm">
              <span class="text-accent mr-2 text-lg">‚òÖ</span>
              <span class="font-inter">{trait}</span>
            </li>
          ))}
        </ul>
      </div>
    )}
    
    <!-- Action Button -->
    {buttonText && (
      <div class="card-actions text-center mb-4">
        <a 
          href={buttonLink} 
          class="luxury-button inline-block px-6 py-3 font-playfair font-semibold transition-all duration-300"
          aria-label={buttonAriaLabel || buttonText}
        >
          {buttonText}
        </a>
      </div>
    )}
    
    <!-- Footer Text -->
    {footerText && (
      <div class="card-footer text-center">
        <p class="text-silver text-sm font-inter italic border-t border-accent border-opacity-20 pt-4">
          {footerText}
        </p>
      </div>
    )}
  </div>
</div>

<style>
  .info-card {
    background: linear-gradient(145deg, rgba(26, 26, 26, 0.8), rgba(15, 15, 15, 0.9));
    backdrop-filter: blur(10px);
    border-width: 1px;
    position: relative;
    overflow: hidden;
  }
  
  .info-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #4169E1, #D4AF37);
    opacity: 0.8;
  }
  
  .info-card:hover::before {
    opacity: 1;
    box-shadow: 0 0 20px rgba(212, 175, 55, 0.5);
  }
  
  /* Placeholder image styling */
  .placeholder-image {
    background: linear-gradient(135deg, #D4AF37 0%, #4169E1 100%);
    position: relative;
    overflow: hidden;
  }
  
  .placeholder-image::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  @keyframes shine {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    50% { transform: translateX(100%) translateY(100%) rotate(45deg); }
    100% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  }
  
  /* Enhanced table styling */
  .table-container {
    background: rgba(15, 15, 15, 0.5);
    border-radius: 8px;
    overflow: hidden;
  }
  
  .table-container table {
    background: transparent;
  }
  
  .table-container th {
    background: linear-gradient(135deg, rgba(212, 175, 55, 0.1), rgba(65, 105, 225, 0.1));
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-size: 0.875rem;
  }
  
  .table-container td {
    font-size: 0.875rem;
    transition: all 0.3s ease;
  }
  
  /* Traits styling */
  .traits-section ul {
    background: rgba(15, 15, 15, 0.3);
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid rgba(212, 175, 55, 0.1);
  }
  
  .traits-section li {
    padding: 0.25rem 0;
    transition: all 0.3s ease;
  }
  
  .traits-section li:hover {
    color: #D4AF37;
    transform: translateX(5px);
  }
  
  /* Enhanced hover effects */
  .info-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
      0 25px 50px rgba(0, 0, 0, 0.3),
      0 0 30px rgba(212, 175, 55, 0.2);
  }
  
  .info-card:hover .placeholder-image {
    transform: scale(1.05);
  }
  
  .info-card:hover .card-content h2 {
    color: #D4AF37;
    text-shadow: 0 0 10px rgba(212, 175, 55, 0.3);
  }
  
  /* Responsive enhancements */
  @media (max-width: 768px) {
    .info-card {
      margin: 0.5rem;
    }
    
    .info-card h2 {
      font-size: 1.5rem;
    }
    
    .placeholder-image {
      height: 12rem;
    }
    
    .traits-section ul {
      grid-template-columns: 1fr;
    }
    
    .table-container {
      font-size: 0.75rem;
    }
    
    .table-container th,
    .table-container td {
      padding: 0.5rem;
    }
  }
  
  /* Theme-specific enhancements */
  .info-card.joker-theme {
    border-color: #D2691E;
  }
  
  .info-card.joker-theme::before {
    background: linear-gradient(90deg, #D2691E, #8B4513);
  }
  
  .info-card.hannibal-theme {
    border-color: #2F2F2F;
  }
  
  .info-card.hannibal-theme::before {
    background: linear-gradient(90deg, #2F2F2F, #1a1a1a);
  }
  
  .info-card.substance-theme {
    border-color: #F5F5DC;
  }
  
  .info-card.substance-theme::before {
    background: linear-gradient(90deg, #F5F5DC, #E6E6CD);
  }
  
  /* Loading animation */
  .info-card {
    animation: cardFadeIn 0.8s ease-out forwards;
    opacity: 0;
  }
  
  @keyframes cardFadeIn {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Accessibility improvements */
  .info-card:focus-within {
    outline: 2px solid #D4AF37;
    outline-offset: 2px;
  }
  
  .luxury-button:focus {
    outline: 2px solid #D4AF37;
    outline-offset: 2px;
  }
  
  /* Print styles */
  @media print {
    .info-card {
      break-inside: avoid;
      box-shadow: none;
      border: 1px solid #ccc;
    }
    
    .placeholder-image {
      background: #f0f0f0 !important;
      color: #333 !important;
    }
  }
</style> 